
resources:
  pipelines:
  - pipeline: build
    source: anw-tech-learning-git-build-pipeline
    trigger: 
      branches:
        include: 
        - skmdm
        exclude:
        - main/*


# pool: myagentpool
#  vmImage: 'ubuntu-latest'

stages:
- stage: Dev
  displayName: 'Dev Retaging'
  jobs:
  - job: DevJob
    pool: myagentpool
    steps: 

    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'specific'
        project: '407edc9b-7dae-4ac2-803e-d87c0db9307c'
        pipeline: '29'
        specificBuildWithTriggering: true
        buildVersionToDownload: 'latest'
        downloadType: 'specific'
        downloadPath: '$(System.ArtifactsDirectory)'
        cleanDestinationFolder: true

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          az acr login -n mvnrepo.azurecr.io --username mvnrepo --password wFzE/+c2VTXgp4bCqZjrBEfJ8bXC/LHNvxGb0z/5+1+ACRDP4yVJ
          imagetag_file=$(cat $(System.ArtifactsDirectory)/image-tag/imageTag.txt)
          echo "##vso[task.setvariable variable=imagetag_file]$imagetag_file"
          docker pull mvnrepo.azurecr.io/mvn-spring:$imagetag_file
          docker tag mvnrepo.azurecr.io/mvn-spring:$imagetag_file mvnrepo.azurecr.io/mvn-spring:dev-$imagetag_file
          docker push mvnrepo.azurecr.io/mvn-spring:dev-$imagetag_file

    - task: Bash@3
      inputs:
        filePath: '$(System.DefaultWorkingDirectory)/scripts/script-dev.sh'
    
    - task: Kubernetes@1
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: 'tomyportal'
        azureResourceGroup: 'cicd-mvn'
        kubernetesCluster: 'mvn-spring'
        namespace: 'dev'
        command: 'apply'
        useConfigurationFile: true
        configuration: 'deployments/deployment-dev.yml'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
        azureSubscriptionEndpointForSecrets: 'tomyportal'
        azureContainerRegistry: 'mvnrepo.azurecr.io'
        secretName: 'secretpull'


- stage: QA
  displayName: 'QA Retaging'
  jobs:
  - deployment: QAJob
    pool: myagentpool
    environment: 'qa-user-approval'
    strategy: 
      runOnce:
        deploy:
          steps:

            - task: DownloadBuildArtifacts@1
              inputs:
                buildType: 'specific'
                project: '407edc9b-7dae-4ac2-803e-d87c0db9307c'
                pipeline: '29'
                specificBuildWithTriggering: true
                buildVersionToDownload: 'latest'
                downloadType: 'specific'
                downloadPath: '$(System.ArtifactsDirectory)'
                cleanDestinationFolder: true

            - task: Bash@3
              inputs:
                targetType: 'inline'
                script: |
                  az acr login -n mvnrepo.azurecr.io --username mvnrepo --password wFzE/+c2VTXgp4bCqZjrBEfJ8bXC/LHNvxGb0z/5+1+ACRDP4yVJ
                  imagetag_file=$(cat $(System.ArtifactsDirectory)/image-tag/imageTag.txt)
                  echo "##vso[task.setvariable variable=imagetag_file]$imagetag_file"
                  docker pull mvnrepo.azurecr.io/mvn-spring:$imagetag_file
                  docker tag mvnrepo.azurecr.io/mvn-spring:$imagetag_file mvnrepo.azurecr.io/mvn-spring:qa-$imagetag_file
                  docker push mvnrepo.azurecr.io/mvn-spring:qa-$imagetag_file

            - task: Bash@3
              inputs:
                filePath: '$(System.DefaultWorkingDirectory)/scripts/script-qa.sh'

            - task: Kubernetes@1
              inputs:
                connectionType: 'Azure Resource Manager'
                azureSubscriptionEndpoint: 'tomyportal'
                azureResourceGroup: 'cicd-mvn'
                kubernetesCluster: 'mvn-spring'
                namespace: 'qa'
                command: 'apply'
                useConfigurationFile: true
                configuration: 'deployments/deployment-qa.yml'
                secretType: 'dockerRegistry'
                containerRegistryType: 'Azure Container Registry'
                azureSubscriptionEndpointForSecrets: 'tomyportal'
                azureContainerRegistry: 'mvnrepo.azurecr.io'
                secretName: 'secretpull'


- stage: Live
  displayName: 'Live Retaging'
  jobs:
  - deployment: LiveJob
    pool: myagentpool
    environment: 'live-user-approval'
    strategy: 
      runOnce:
        deploy:
          steps:

            - task: DownloadBuildArtifacts@1
              inputs:
                buildType: 'specific'
                project: '407edc9b-7dae-4ac2-803e-d87c0db9307c'
                pipeline: '29'
                specificBuildWithTriggering: true
                buildVersionToDownload: 'latest'
                downloadType: 'specific'
                downloadPath: '$(System.ArtifactsDirectory)'
                cleanDestinationFolder: true
            
            - task: Bash@3
              inputs:
                targetType: 'inline'
                script: |
                  az acr login -n mvnrepo.azurecr.io --username mvnrepo --password wFzE/+c2VTXgp4bCqZjrBEfJ8bXC/LHNvxGb0z/5+1+ACRDP4yVJ
                  imagetag_file=$(cat $(System.ArtifactsDirectory)/image-tag/imageTag.txt)
                  echo "##vso[task.setvariable variable=imagetag_file]$imagetag_file"
                  docker pull mvnrepo.azurecr.io/mvn-spring:$imagetag_file
                  docker tag mvnrepo.azurecr.io/mvn-spring:$imagetag_file mvnrepo.azurecr.io/mvn-spring:live-$imagetag_file
                  docker push mvnrepo.azurecr.io/mvn-spring:live-$imagetag_file

            - task: Bash@3
              inputs:
                filePath: '$(System.DefaultWorkingDirectory)/scripts/script-live.sh'

            - task: Kubernetes@1
              inputs:
                connectionType: 'Azure Resource Manager'
                azureSubscriptionEndpoint: 'tomyportal'
                azureResourceGroup: 'cicd-mvn'
                kubernetesCluster: 'mvn-spring'
                namespace: 'live'
                command: 'apply'
                useConfigurationFile: true
                configuration: 'deployments/deployment-live.yml'
                secretType: 'dockerRegistry'
                containerRegistryType: 'Azure Container Registry'
                azureSubscriptionEndpointForSecrets: 'tomyportal'
                azureContainerRegistry: 'mvnrepo.azurecr.io'
                secretName: 'secretpull'

